<template lang="html">
    <div class="serveRoot">
        <header-cart :title="$store.state.user.curCarNum" :iconType="iconType" :rightParams="rightParams" v-on:changeCar="changeCarReal"></header-cart>
        <div class="serveType" >
            <router-link to="/serve/index">保养<em></em></router-link>
            <router-link to="/serve/fix">维修<em></em></router-link>
            <router-link to="/serve/hairdressing">美容<em></em></router-link>
            <router-link to="/serve/tire">轮胎<em></em></router-link>
            <router-link to="/serve/sprinkle">无痕钣喷</router-link>
        </div>
        <router-view></router-view>
        <mt-popup v-model="popupVisible"  position="top">
            <div class="carNode" v-for="item in carList" @click="setDefaultCar(item.id, item.displayLicensePlate)">{{item.displayLicensePlate}}</div>
        </mt-popup>
    </div>
</template>

<script>
import headerCart from '../../components/header/headerCart.vue'
import { Toast, Popup } from 'mint-ui'
import ajax from './../../vueResource.ajax.js'
export default {
    data () {
        return {
            iconType: 'icon-fanhui',
            // rightParams: {
            //     path: '/cart',
            //     desc: this.cartNum
            // },
            popupVisible: false,
            carList: []
        }
    },
    components: {
        'header-cart': headerCart,
        'mt-popup': Popup
    },
    beforeCreate () {
        this.$store.commit('hideFoot')
    },
    computed: {
        cartData () {
            return this.$store.state.cart.cartData
        },
        defaultCar () {
            return this.$store.state.user.userDefaultCar
        },
        rightParams () {
            var num = 0
            if (this.$store.state.cart.cartData.serviceShoppingCartItems) {
                num = this.$store.state.cart.cartData.serviceShoppingCartItems.length
            }
            return {
                path: '/cart',
                desc: num
            }
        }
    },
    created () {
        if (this.$store.state.user.userDefaultCar.displayLicensePlate) {
            this.$store.state.user.curCarNum = this.$store.state.user.userDefaultCar.licensePlate
            this.getCartData()
        } else {
            this.getDefaultCarInfo()
        }
        // 获取车辆数据
        this.getCarList()
    },
    methods: {
        changeCarReal () {
            this.popupVisible = true
        },
        setDefaultCar (id, num) {
            this.$store.state.user.curCarNum = num
            this.$store.state.user.curCarID = id
            // this.getCartData()
            this.getDefaultCarInfo()
            this.popupVisible = false
        },
        getCartData () {
            ajax.ajax({
                'vue': this,
                'port': 'GetShoppingCart',
                'type': 'get',
                'params_url': '?customerCarId=' + this.defaultCar.id,
                'statusOk': function (res, v) {
                    v.$store.state.cart.cartData = res.data.data
                    console.log(res.data.data.serviceShoppingCartItems.length)
                    // v.rightParams.desc = v.$store.state.cart.cartData.serviceShoppingCartItems.length
                },
                'statusError': function (res, v) {
                    Toast('获取购物车列表失败')
                }
            })
        },
        getDefaultCarInfo () {
            if (!this.$store.state.user.curCarNum) {
                ajax.ajax({
                    'vue': this,
                    'port': 'GetDefaultCustomerCar',
                    'type': 'get',
                    'statusOk': function (res, v) {
                        v.$store.state.user.userDefaultCar = res.data.data
                        v.$store.state.user.curCarNum = v.$store.state.user.userDefaultCar.displayLicensePlate
                        v.getCartData()
                    },
                    'statusError': function (res, v) {
                        Toast('获取用户信息失败')
                    }
                })
            } else {
                var listData = this.$store.state.user.userCarList
                var curCarID = this.$store.state.user.curCarID
                for (var i = 0; i < listData.length; i++) {
                    if (listData[i].id === curCarID) {
                        this.$store.state.user.userDefaultCar = listData[i]
                        this.getCartData()
                    }
                }
            }
        },
        getCarList () {
            ajax.ajax({
                'vue': this,
                'port': 'GetCustomerCars',
                'type': 'get',
                'statusOk': function (res, v) {
                    var tmpdata = res.data.data
                    v.carList = tmpdata
                    console.log(v.carList)
                    // 保存车辆列表
                    v.$store.state.user.userCarList = tmpdata
                },
                'statusError': function (res, v) {
                    Toast('获取用户车辆失败')
                }
            })
        }
    }
}
</script>
<style lang="stylus" rel="stylesheet/stylus">
    @import "../../assets/css/serve.styl"
</style>
