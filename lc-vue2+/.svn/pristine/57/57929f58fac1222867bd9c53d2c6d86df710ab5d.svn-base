<template lang="html">
    <!-- 我的地址 -->
    <div id="address">
        <header-common :title="viewTitle" :iconType="iconType" :rightParams="rightParams"></header-common>
        <div id="addressWrap">
            <div class="slide" ref="scrollBar">
                <div class="slideBar">
                    <div class="list" v-for="add in addressList">
                        <div class="info">
                            <p><span class="name">{{add.customerName}}</span><span class="tel">{{add.phoneNumber}}</span></p>
                            <p class="addressInfo">{{add.details}}</p>
                        </div>
                        <div class="operate">
                            <div class="default" :class="{ sel: add.isDefault}"  @click="onDefault(add)"><span class="iconfont icon-xuanze"></span>默认地址<em></em></div>
                            <div class="delate" @click="delAddress(add.id)"><span class="iconfont icon-shanchu"></span>删除</div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="btnWrap">
                <button class="charge" @click="$router.push('/user/addAddress')">添加地址</button>
            </div>
        </div>
    </div>

</template>

<script>
import headerCommon from '../../components/header/headerCommon.vue'
import Bscroll from 'better-scroll'
import { Toast, MessageBox } from 'mint-ui'
import ajax from './../../vueResource.ajax.js'
// import ports from './../../port.js'
export default {
    data () {
        return {
            viewTitle: '我的地址',
            iconType: 'icon-fanhui',
            rightParams: {},
            // 地址列表
            addressList: []
        }
    },
    components: {
        'header-common': headerCommon
    },
    created () {
        this.getAddressList()
        this.$nextTick(function () {
            this._initScroll()
        })
    },
    beforeCreate () {
        this.$store.commit('hideFoot')
    },
    methods: {
        _initScroll () {
            this.viewScroll = new Bscroll(this.$refs.scrollBar, {
                click: true,
                scrollY: true
            })
        },
        getAddressList () {
            // var that = this
            // this.$http.get(ports.port.MyAddresses).then((res) => {
            //     if (res.data.success === true) {
            //         this.addressList = res.data.data
            //         // console.log(this.addressList)
            //         setTimeout(function () {
            //             that.viewScroll.refresh()
            //         }, 300)
            //     } else {
            //         Toast('获取地址失败')
            //     }
            // })
            ajax.ajax({
                'vue': this,
                'port': 'MyAddresses',
                'type': 'get',
                'statusOk': function (res, v) {
                    v.addressList = res.data.data
                    // console.log(this.addressList)
                    setTimeout(function () {
                        v.viewScroll.refresh()
                    }, 300)
                },
                'statusError': function (res, v) {
                    Toast('获取地址失败')
                }
            })
        },
        onDefault (data) {
            console.log(data)
            ajax.ajax({
                'vue': this,
                'port': 'SetDefaultAddress',
                'req_params': { addressId: data.id },
                'type': 'post',
                'statusOk': function (res, v) {
                    Toast('设置成功')
                    for (var i in v.addressList) {
                        if (v.addressList[i].isDefault === true && v.addressList[i].id !== data.id) {
                            v.addressList[i].isDefault = false
                        }
                    }
                },
                'statusError': function (res, v) {
                    Toast('设置失败')
                }
            })
            if (data.isDefault) {
                data.isDefault = false
            } else {
                data.isDefault = true
            }
        },
        delAddress (id) {
            MessageBox.confirm('确定删除该地址吗?', '').then(action => {
                // this.$http.post(ports.port.DeleteAddress, { addressId: id }).then((res) => {
                //     if (res.data.success === true) {
                //         this.getAddressList()
                //         Toast('删除成功')
                //     } else {
                //         Toast('删除失败')
                //     }
                // })
                ajax.ajax({
                    'vue': this,
                    'port': 'DeleteAddress',
                    'req_params': { addressId: id },
                    'type': 'post',
                    'statusOk': function (res, v) {
                        v.getAddressList()
                        Toast('删除成功')
                    },
                    'statusError': function (res, v) {
                        Toast('删除失败')
                    }
                })
            })
        }
    }
}
</script>

<style lang="stylus" rel="stylesheet/stylus">
#address
    #addressWrap
        position:absolute
        top:55px
        bottom:74px
        width:100%
        .slide
            height:100%
            .list
                background-color:#fff
                margin-bottom:10px
                border-bottom:1px solid #ddd
                .info
                    min-height: 60px
                    padding-bottom:10px
                    margin-left:10px
                    border-bottom:1px solid #ddd
                    p
                        overflow:hidden
                        color:#333
                        .name
                            float:left
                            line-height:35px
                            font-size:18px
                            color:#333
                            display:inline-block
                            width:100px
                            overflow:hidden
                        .tel
                            float:left
                            display:inline-block
                            line-height:35px
                            font-size:15px
                        &:last-child
                            color:#999
            .operate
                height:45px
                display:flex
                div
                    flex:1
                    line-height:45px
                    span
                        color:#c3c3c3
                        margin-right:8px
                        vertical-align:middle
                        font-size:24px
                        display:inline-block
                        height:24px
                        line-height:24px
                    &:first-child
                        text-align:left
                        padding-left:10px
                    &:last-child
                        text-align:right
                        padding-right:20px
                        span
                            font-size:18px
                .sel
                    span
                        color:#dab96e
        .btnWrap
            position:fixed
            bottom:0
            width:100%
            background-color:#fff
            z-index:2
            .charge
                width: 94%
                margin: 20px 3% 10px 3%
                background-color: #c7a770
                height: 44px
                line-height: 44px
                color: #fff
                border: none
                font-size: 18px
</style>
