<template lang="html">
    <div class="login">
        <header-common :title="viewTitle" :iconType="iconType" :rightParams="rightParams"></header-common>
        <div class="registerWrap">
            <form action="" class="regFrom">
                <!-- <div><input type="text" name="mobile" autocomplete="off" placeholder="我的手机号" v-model="userName" @blur="onCheckCode"/></div> -->
                <div><input type="text" name="mobile" autocomplete="off" placeholder="我的手机号" v-model="userName" @blur="onCheckCode"/></div>
                <div><input type="password" name="password" placeholder="我的密码" v-model="password" /></div>
                <div v-if="hasCode">
                    <input type="text" name="code" placeholder="验证码" v-model="code" />
                    <img :src="codeImg" @click="onChangeCode" />
                </div>
                <div class="bt"></div>
                <input type="button" value="登录" class="sub" @click="onLogin">
                <div>
                    <router-link to="/findPassword">忘记密码</router-link>
                </div>
            </form>

        </div>
    </div>


</template>

<script>
import Vue from 'vue'
import headerCommon from 'components/header/headerCommon.vue'
import { Toast, Indicator } from 'mint-ui'
import ports from './../port.js'
import ajax from './../vueResource.ajax.js'

export default {
    data () {
        return {
            viewTitle: '登录',
            iconType: 'icon-guanbi',
            rightParams: {
                path: '/register',
                desc: '注册'
            },
            userName: '',
            password: '',
            code: '',
            // 是否需要验证码
            hasCode: false,
            // 图形验证码
            codeImg: '',
            // 极光设备号
            jgCode: ''
        }
    },
    components: {
        'header-common': headerCommon
    },
    beforeCreate () {
        this.$store.commit('hideFoot')
    },
    beforeDestroy () {
        Indicator.close()
    },
    created () {
        window.localStorage.clear()
        this.$store.state.user.userToken = ''
        this.$store.state.user.userName = ''
        this.$store.state.user.userDefaultCar = {}
        this.$store.state.user.curCarData = {}
        this.$store.state.user.curAreaID = ''
        this.$store.state.user.curCarNum = ''
        this.$store.state.user.userCarList = []
        this.$store.state.user.userInfo = {}
        this.$store.state.user.curCarID = ''
    },
    methods: {
        onLogin () {
            if (!this.userName) {
                window.$.PageDialog.ok('请填写手机号码')
                return false
            }
            if (!this.password) {
                window.$.PageDialog.ok('请填写密码')
                return false
            }
            var params = {
                'username': this.userName,
                'password': this.password,
                'code': this.code
            }
            Indicator.open()
            this.$http.post(ports.port.Authenticate, params).then((res) => {
                if (res.data.success === true) {
                    if (res.data.data.loginSuccess === false) {
                        // 登录失败
                        window.$.PageDialog.ok(res.data.data.error)
                        Indicator.close()
                        if (res.data.data.requiredCode === true) {
                            this.hasCode = true
                            this.getCode()
                        }
                    } else {
                        // 成功返回 保存token
                        window.localStorage.userToken = res.data.data.token
                        window.localStorage.userName = this.userName
                        this.$store.state.userToken = res.data.data.token
                        this.$store.state.userName = this.userName
                        // this.$http.options.root = '/root'
                        // this.$http.headers.common['Authorization'] = 'Bearer ' + res.data.data.token
                        // this.$http.headers.custom['Authorization'] = 'Bearer ' + res.data.data.token
                        Vue.http.options.root = '/root'
                        Vue.http.headers.common['Authorization'] = 'Bearer ' + res.data.data.token
                        this.registerSBM
                        this.$router.push('/index')
                    }
                } else {
                    Indicator.close()
                    window.$.PageDialog.ok(res.data.errorMessage)
                    if (this.hasCode) {
                        this.getCode()
                    }
                }
            }, (res) => {
            })
        },
        // 注册设备码
        registerSBM () {
            var params = {
                'registrationId': window.sessionStorage.jgCode
            }
            ajax.ajax({
                'vue': this,
                'port': 'RegisterDevice',
                'type': 'post',
                'req_params': params,
                'statusOk': function (res, v) {
                    window.$.PageDialog.ok('设备码注册成功')
                },
                'statusError': function (res, v) {
                    window.$.PageDialog.ok('设备码注册失败')
                }
            })
        },
        onChangeCode () {
            // 更换验证码
            this.getCode()
        },
        onCheckCode () {
            // 验证是否需要验证码
            this.verifyNeededCode()
        },
        verifyNeededCode () {
            this.$http.post(ports.port.NeededCode + '?username=' + this.userName).then((res) => {
                if (res.data.success === true) {
                    this.hasCode = res.data.data
                }
            }, (res) => {
            })
        },
        getCode () {
            // 获取验证码
            this.$http.get(ports.port.LoginCode + '?username=' + this.userName).then((res) => {
                if (res.data.success === true) {
                    this.codeImg = res.data.data
                    this.isCodeDisabled = true
                }
            }, (res) => {
            })
        },
        userAgent() {
            var ua = navigator.userAgent.toLowerCase()
            var _ua = ""
            if (/iphone|ipad|ipod/.test(ua)) {
                _ua = "ios"
            } else if (/android/.test(ua)) {
                _ua = "android"
            }else{
                _ua = "web"
            }
            return _ua
        }
    },
    watch: {
        hasCode () {
            if (this.hasCode) {
                this.getCode()
            }
        }
    }
}
</script>

<style lang="stylus" rel="stylesheet/stylus">
.login
    .registerWrap
        margin-top:55px
        border-top:1px solid #ccc
        .regFrom
            /*background-color:#fff*/
            width:100%
            div
                height:45px
                line-height:45px
                margin-left:45px
                border-top:1px solid #ccc
                position:relative
                &:before
                    content:''
                    display:block
                    position:absolute
                    left:-45px
                    top:0px
                    width:45px
                    height:45px
                    background-image:url(../assets/images/icon_account.png)
                    background-repeat:no-repeat
                    background-size:19px 213px
                    background-color:#fff
                &:first-child
                    border-top:none
                    &:before
                        background-position:13px -34px
                        border-bottom:1px solid #fff
                &:nth-child(2)
                    &:before
                        background-position:13px -179px
                &:nth-child(3)
                    input
                        width:60%
                    img
                        display:inline-block
                        width:70px
                        height:30px
                        vertical-align:middle
                        border:none
                    &:before
                        background-position:13px -82px
                &:last-child
                    border-top:none
                    text-align:center
                    margin:0
                .getCode
                    height:25px
                    width:90px
                    line-height:25px
                    color:#fff
                    background-color:#c7a770
                    float:right
                    margin-top:10px
                    margin-right:20px
                .checkBox
                    display:inline-block
                    width:18px
                    height:18px
                    border:1px solid #bbb
                    line-height:19px
                    margin:0
                .checked
                    color:#c7a770
                input
                    height:45px
                    width:100%
                .code
                    width:60%
                .router-link-active
                    color:#c7a770
            .bt
                height:1px
                border-top:1px solid #ccc
                margin:0
            .sub
                width:94%
                height:45px
                background-color:#c7a770
                color:#fff
                display:block
                margin:15px auto


</style>
